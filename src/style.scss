@import "../node_modules/mathsass/dist/_math";

body {
  position: relative;
}

#main {
  position: absolute 0;
  margin: auto;
  size: 640px;
  background: hsl(42, 21%, 95%);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 480px;
}

.backcovers-1 {
  position: absolute 0;
  margin: auto;
  size: 100%;
}

.backcover-1 {
  position: absolute;
  top: 50% * (1 - sqrt(2));
  left: 50% * (1 - sqrt(2));
  size: 100% * sqrt(2);
  border-radius: 50%;
  @for $i from 1 through 9 {
    &:nth-of-type(#{$i}) {
      background-color: hsl(170 + 30 * ($i - 1), 80%, 76% + $i * 0.5%);
      animation: backcover-1 0.6s both cubic-bezier(0.895, 0.03, 0.545, 0.76);
      animation-delay: 0.05s * ($i - 1);
      @keyframes backcover-1 {
        from {
          transform: scale(0);
        }
        to {
          transform: scale(1);
        }
      }
    }
  }
}

.cake-wrap {
  position: absolute 0;
  z-index: 8888;
  size: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  animation: cake-wrap 0.6s 0.5s cubic-bezier(0.28, 1.645, 0.455, 0.815) both;
  @keyframes cake-wrap {
    from {
      transform: rotate(0);
    }
    to {
      transform: rotate(1turn);
    }
  }
}

.cake {
  font-size: 6.5rem;
  animation: cake 0.5s 0.5s cubic-bezier(0.51, 0.465, 0.25, 1.39) both;
  @keyframes cake {
    from {
      transform: scale(0);
    }
    to {
      transform: scale(1);
    }
  }
}

.text-wrap {
  position: relative;
  padding: 12px;
  overflow: hidden;
  .covers {
    position: absolute 0;
    z-index: 1;
    .cover {
      position: absolute;
      size: 100%;
      @for $i from 1 through 2 {
        &:nth-of-type(#{$i}) {
          background-color: hsl(25, 53%, 40% + $i * 20%);
          transform-origin: left;
          animation: text-cover 0.5s both cubic-bezier(0.86, 0, 0.07, 1);
          animation-delay: 0.8s + 0.1s * ($i - 1);
          @keyframes text-cover {
            from {
              transform: scaleX(0);
            }
            50% {
              transform: scaleX(1) translateX(0);
            }
            to {
              transform: translateX(100%);
            }
          }
        }
      }
    }
  }
  .text {
    color: #2f2f2f;
    text-align: center;
    font-family: "M PLUS Rounded 1c", sans-serif;
    font-size: 1.8rem;
    line-height: 1em;
    animation: text 0.5s both cubic-bezier(0.17, 0.725, 0.225, 0.985);
    animation-delay: 1.1s;
    @keyframes text {
      from {
        opacity: 0;
        transform: translateX(-20%);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
  }
}

.fireworks {
  position: absolute 0;
  size: 100%;
  z-index: 8;
}
.firework {
  position: absolute;
  $size: 160px;
  size: $size;
  border-radius: 50%;
  border: ($size / 2) solid;
  animation: firework 0.4s both linear;
  @keyframes firework {
    from {
      transform: scale(0);
    }
    50% {
      transform: scale(1);
    }
    to {
      transform: scale(2);
      border-width: 0;
      opacity: 0;
    }
  }
  @for $i from 1 through 6 {
    &:nth-of-type(#{$i}) {
      border-color: hsl(25 + ($i - 3) * 15, 95%, 47%);
      animation-delay: 0.8s + 0.1s * ($i - 1);
      top: calc(#{(sin(($i - 1) * 95deg)) * 20% + 50%});
      left: calc(#{(cos(($i - 1) * 75deg)) * 50% + 50%});
    }
  }
}
